name: File Versioning

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:
  update_versioning:
    runs-on: ubuntu-latest

    env:
      API_KEY: ${{ secrets.API_KEY }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    permissions:
      actions: write
      checks: write
      contents: write
      deployments: write
      id-token: write
      issues: write
      discussions: write
      packages: write
      pages: write
      pull-requests: write
      repository-projects: write
      security-events: write
      statuses: write

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        with:
            fetch-depth: 0  # Fetch the complete commit history

      - name: Set up Git
        run: |
          git config user.email "actions@wcrp-cmip.org"
          git config user.name "CMIP-IPO: Automated GitHub Action"
          git config credential.helper store
          git config --global user.email "actions@wcrp-cmip.org"
          git config --global user.name "CMIP-IPO GitHub Action"
          git config --global push.default current
          echo "GH_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
        shell: bash

  
         

      - name: Update Versioning
        id: run-python-script
        run: python .github/libs/version.py -t ${GH_TOKEN}
        # working-directory: .github/libs  # Adjusted the working directory
        shell: bash

      - name: Display Version Metadata for JSON Files
        run: |
          # Get the list of JSON files in the repository
          json_files=$(git ls-tree --name-only -r HEAD | grep '\.json$')
      
          # Iterate over each JSON file and display 'version_metadata'
          for json_file in $json_files; do
            metadata=$(git show HEAD:$json_file | jq '.version_metadata')
            if [ $? -eq 0 ] && [ "$metadata" != "null" ]; then
                
            echo "File: $json_file, Version Metadata: $metadata"
            fi
          done
        shell: bash
        continue-on-error: true


      - name: Write Changes
        run: |
          if [ -z "$ACT" ]; then
              timestamp=$(date -u +"%Y-%m-%d %H:%M UTC")
              git add -A 
              git commit -m 'Automated Versioning Update $timestamp' 
              git push origin $(git rev-parse --abbrev-ref HEAD)
          else
            echo "Skipping this step in 'act' environment."
          fi
        shell: bash
        continue-on-error: true